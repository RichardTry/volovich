{
  "name": "Neo4jSinkConnector",
  "config": {
    "topics": 
        "dbserverpostgres.public.institution, dbserverpostgres.public.students, dbserverpostgres.public.groups, dbserverpostgres.public.cafedra, dbserverpostgres.public.course, dbserverpostgres.public.specialty, dbserverpostgres.public.lesson",
    "connector.class": "streams.kafka.connect.sink.Neo4jSinkConnector",
    "key.converter": "org.apache.kafka.connect.storage.StringConverter",
    "key.converter.schemas.enable": false,
    "value.converter": "org.apache.kafka.connect.storage.StringConverter",
    "value.converter.schemas.enable": false,
    "errors.retry.timeout": "-1",
    "errors.retry.delay.max.ms": "1000",
    "errors.tolerance": "all",
    "errors.log.enable": true,
    "errors.log.include.messages": true,
    "neo4j.server.uri": "bolt://neo4j:7687",
    "neo4j.authentication.basic.username": "neo4j",
    "neo4j.authentication.basic.password": "connect",
    "neo4j.topic.cypher.dbserverpostgres.public.institution": 
        "call apoc.do.case([event.op = 'd', 'match (i:Institute{id : b_i_id}) detach delete i', event.op = 'c', 'create (i:Institute{id: a_i_id, title: a_i_title})', event.op = 'u', 'match(i:Institute {id:a_i_id}) set i.title = a_i_title'], '', {b_i_id:event.before.id, a_i_id:event.after.id, a_i_title:event.after.title}) yield value as v return v",
    "neo4j.topic.cypher.dbserverpostgres.public.students": "",
    "neo4j.topic.cypher.dbserverpostgres.public.groups": "",
    "neo4j.topic.cypher.dbserverpostgres.public.cafedra":
        "call apoc.do.case([event.op = 'd', 'match (c:Cafedra{code : b_c_code}) detach delete c', event.op = 'c', 'MATCH(i:Institute{id: a_i_id}) CREATE (c:Cafedra{code: a_c_code, title: a_c_title})-[:member_of]->(i)', event.op = 'u', 'match(c:Cafedra {code:a_c_code}) set c.title = a_c_title'], '', {a_i_id: event.after.institutionid, b_c_code:event.before.code, a_c_code:event.after.code, a_c_title:event.after.title}) yield value as v return v",
    "neo4j.topic.cypher.dbserverpostgres.public.course": "",
    "neo4j.topic.cypher.dbserverpostgres.public.specialty": "",
    "neo4j.topic.cypher.dbserverpostgres.public.lesson": ""
  }
}
